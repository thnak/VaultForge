@using BusinessModels.Utils
@using WebApp.Client.Components.Menus
@rendermode InteractiveWebAssembly
@attribute [Route("/")]

@attribute [Route(PageRoutes.Drive.Index.Src)]
@attribute [Route(PageRoutes.Drive.Shared.Src)]
@attribute [Route(PageRoutes.Drive.Trash.Src)]

<PageTitle>
    @LangDict[PageRoutes.Drive.Shared.Title]
</PageTitle>

<HeadContent>
    <HeadContentContainer  />
</HeadContent>

<SectionContent SectionId="@AppBar.TopBarSectionN" >
    <RedditMobileMenu Name="@LangDict[PageRoutes.Drive.Shared.Title]" />
</SectionContent>

<MudBreadcrumbs Class="d-md-flex d-none" Items="@BreadcrumbItems" ></MudBreadcrumbs>

@if (Loading)
{
    <SectionContent SectionId="@AppBar.TopBarSection1" >
        <MudProgressCircular Color="MudColor.Primary" Indeterminate="true" Size="MudSize.Small" />
    </SectionContent>
}

@if (FileLayoutSelects[LayoutSelectType.Grid])
{
    <style>
    .content-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    }
</style>
}
else
{
    <style>
    .content-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    }
</style>
}
<style>
    @@media (max-width: 640px) {
        .content-grid {
            padding: 0px 24px !important;
        }
    }

    @@media (min-width: 641px) {
        .content-grid {
            padding: 0px 8px !important;
        }
    }
</style>

<SectionContent SectionId="@AppBar.TopBarSection2" >
    <MudMenu AnchorOrigin="Origin.BottomLeft" Dense EndIcon="@Icons.Material.Filled.KeyboardArrowDown" IconColor="MudColor.Secondary" Label="@AppLang.New" Class="rounded-lg" StartIcon="fa-plus fa-solid" TransformOrigin="Origin.TopLeft" >
        <MudMenuItem Icon="@Icons.Material.Filled.Link" OnClick="@OpenAddPopUp" >@AppLang.Link</MudMenuItem>
        <MudMenuItem Icon="@Icons.Material.Filled.AttachFile" OnClick="@OpenAddPopUp" >@AppLang.File</MudMenuItem>
        <MudMenuItem Icon="@Icons.Material.Filled.Folder" OnClick="@OpenAddNewFolder" >@AppLang.Folder</MudMenuItem>
    </MudMenu>
</SectionContent>

<MudDropContainer Class="d-flex flex-column flex-grow-1 gap-1" ItemDropped="ItemUpdated" Items="FileItemList" ItemsSelector="@((item, dropzone) => item.Identifier == dropzone)" @ref="DropContainer" T="DropItem" >
    <ChildContent>
        <MudListSubheader Class="d-flex flex-row pb-2" >
            <MudText Typo="Typo.h5" >
                @AppLang.Folder
            </MudText>
            <MudSpacer />

            <MudButtonGroup Color="MudColor.Primary" OverrideStyles="false" Variant="Variant.Outlined" >
                <MudIconButton aria-label="list layout" Color="@GetFolderLayoutColor(LayoutSelectType.List)" Icon="fa-solid fa-bars-staggered" OnClick="@(() => FolderLayoutChange(LayoutSelectType.List))" Size="MudSize.Small" />
                <MudIconButton aria-label="grid layout" Color="@GetFolderLayoutColor(LayoutSelectType.Grid)" Icon="fa-solid fa-table-cells-large" OnClick="@(() => FolderLayoutChange(LayoutSelectType.Grid))" Size="MudSize.Small" />
                <MudIconButton aria-label="title layout" Color="@GetFolderLayoutColor(LayoutSelectType.Title)" Icon="fa-solid fa-table-cells" OnClick="@(() => FolderLayoutChange(LayoutSelectType.Title))" Size="MudSize.Small" />
            </MudButtonGroup>

        </MudListSubheader>
        <div class="content-grid gap-2" >

            @foreach (var x in FolderItemList)
            {
                <MudDropZone Class="gap-2 pa-2 rounded-lg" Identifier="Work" @key="x" OnlyZone="false" T="DropItem" >
                    <div class="@x.ItemClassList" @ondblclick="x.DbLickEvent.Action" >
                        <MudIcon Color="MudColor.Inherit" Icon="@x.Icon" />
                        <div class="flex-1 overflow-hidden" >
                            <span class="text-limit" >
                                @x.Name
                            </span>
                        </div>

                        <div class="icon-container-tag" >
                            <MudTooltip Arrow Color="@MudColor.Secondary" Placement="Placement.Top" Text="@AppLang.Other_operations" >
                                <MudMenu AriaLabel="@AppLang.Other_operations" Dense Icon="fa-ellipsis-vertical fa-solid" >
                                    <MudMenuItem Disabled="@x.Rename.Disabled" Icon="@Icons.Material.Filled.Edit" OnClick="@x.Rename.Action" >@AppLang.ReName</MudMenuItem>
                                    <MudMenuItem Disabled="@x.Share.Disabled" Icon="@Icons.Material.Filled.Share" OnClick="@x.Share.Action" >@AppLang.Share</MudMenuItem>
                                    <MudMenuItem Disabled="@x.GetLink.Disabled" Icon="@Icons.Material.Filled.Link" OnClick="@x.GetLink.Action" >@AppLang.Get_link</MudMenuItem>
                                    <MudMenuItem Disabled="@x.MoveTo.Disabled" Icon="@Icons.Material.Filled.DriveFileMove" OnClick="@x.MoveTo.Action" >@AppLang.Move_to</MudMenuItem>
                                    <MudMenuItem Disabled="@x.GetInformation.Disabled" Icon="@Icons.Material.Filled.Info" OnClick="@x.GetInformation.Action" >@AppLang.Info</MudMenuItem>
                                    <MudMenuItem Disabled="@x.Delete.Disabled" Icon="@Icons.Material.Filled.DeleteForever" IconColor="MudColor.Error" OnClick="@x.Delete.Action" >@AppLang.Delete</MudMenuItem>
                                </MudMenu>
                            </MudTooltip>
                        </div>
                    </div>
                </MudDropZone>
            }

        </div>
        <MudListSubheader Class="d-flex flex-row pb-2" >
            <MudText Typo="Typo.h5" >
                @AppLang.File
            </MudText>
            <MudSpacer />
            <MudButtonGroup Color="MudColor.Primary" OverrideStyles="false" Variant="Variant.Outlined" >
                <MudIconButton Color="@GetFileLayoutColor(LayoutSelectType.List)" Icon="fa-solid fa-bars-staggered" OnClick="@(() => FileLayoutChange(LayoutSelectType.List))" Size="MudSize.Small" />
                <MudIconButton Color="@GetFileLayoutColor(LayoutSelectType.Grid)" Icon="fa-solid fa-table-cells-large" OnClick="@(() => FileLayoutChange(LayoutSelectType.Grid))" Size="MudSize.Small" />
                <MudIconButton Color="@GetFileLayoutColor(LayoutSelectType.Title)" Icon="fa-solid fa-table-cells" OnClick="@(() => FileLayoutChange(LayoutSelectType.Title))" Size="MudSize.Small" />
            </MudButtonGroup>

        </MudListSubheader>
        <MudDropZone Class="content-grid gap-2 pa-2 rounded-lg" Identifier="File" ItemDisabled="@ItemsDisable2Drag" T="DropItem" />
    </ChildContent>
    <ItemRenderer>
        @if (FileLayoutSelects[LayoutSelectType.Grid])
        {
            <div @key="context" @ondblclick="context.DbLickEvent.Action" >
                <div class="file-item-grid mud-elevation-1 mud-paper pa-6" style="@context.Thumbnail" >
                    <div class="icon" >
                        @if (context.Thumbnail == "")
                        {
                            <i class="@context.Icon" ></i>
                        }
                    </div>
                    <MudSpacer />
                    <div class="info" >
                        <span class="text-limit" >
                            @context.Name
                        </span>
                    </div>

                    <div class="menu" >
                        @* @context.Menu *@
                        <MudTooltip Arrow Color="@MudColor.Secondary" Placement="Placement.Top" Text="@AppLang.Other_operations" >
                            <MudMenu AriaLabel="@AppLang.Other_operations" Icon="fa-ellipsis-vertical fa-solid" Class="rounded-lg">
                                <MudMenuItem Disabled="@context.Open.Disabled" Icon="fa-solid fa-eye" OnClick="@context.Open.Action" >@AppLang.Open</MudMenuItem>
                                <MudMenuItem Disabled="@context.Download.Disabled" Icon="@Icons.Material.Filled.CloudDownload" OnClick="@context.Download.Action" >@AppLang.Download</MudMenuItem>
                                <MudMenuItem Disabled="@context.Rename.Disabled" Icon="@Icons.Material.Filled.Edit" OnClick="@context.Rename.Action" >@AppLang.ReName</MudMenuItem>
                                <MudMenuItem Disabled="@context.Share.Disabled" Icon="@Icons.Material.Filled.Share" OnClick="@context.Share.Action" >@AppLang.Share</MudMenuItem>
                                <MudMenuItem Disabled="@context.GetLink.Disabled" Icon="@Icons.Material.Filled.Link" OnClick="@context.GetLink.Action" >@AppLang.Get_link</MudMenuItem>
                                <MudMenuItem Disabled="@context.MoveTo.Disabled" Icon="@Icons.Material.Filled.DriveFileMove" OnClick="@context.MoveTo.Action" >@AppLang.Move_to</MudMenuItem>
                                <MudMenuItem Disabled="@context.GetInformation.Disabled" Icon="@Icons.Material.Filled.Info" OnClick="@context.GetInformation.Action" >@AppLang.Info</MudMenuItem>
                                <MudMenuItem Disabled="@context.Delete.Disabled" Icon="@Icons.Material.Filled.DeleteForever" IconColor="MudColor.Error" OnClick="@context.Delete.Action" >@AppLang.Delete</MudMenuItem>
                            </MudMenu>
                        </MudTooltip>
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="@context.ItemClassList" @key="context" @ondblclick="context.DbLickEvent.Action" >
                <div class="icon-container-tag" >
                    <MudText Typo="Typo.h6" >
                        <i class="@IconContentExtensions.GetIconContentType(context.ContentType)" ></i>
                    </MudText>
                </div>
                <div class="flex-1 overflow-hidden" >
                    <span class="text-limit" >
                        @context.Name
                    </span>
                </div>
                <div class="icon-container-tag" >
                    @* @context.Menu *@
                    <MudTooltip Arrow Color="@MudColor.Secondary" Placement="Placement.Top" Text="@AppLang.Other_operations" >
                        <MudMenu AriaLabel="@AppLang.Other_operations" Icon="fa-ellipsis-vertical fa-solid" >
                            <MudMenuItem Disabled="@context.Open.Disabled" Icon="fa-solid fa-eye" OnClick="@context.Open.Action" >@AppLang.Open</MudMenuItem>
                            <MudMenuItem Disabled="@context.Download.Disabled" Icon="@Icons.Material.Filled.CloudDownload" OnClick="@context.Download.Action" >@AppLang.Download</MudMenuItem>
                            <MudMenuItem Disabled="@context.Rename.Disabled" Icon="@Icons.Material.Filled.Edit" OnClick="@context.Rename.Action" >@AppLang.ReName</MudMenuItem>
                            <MudMenuItem Disabled="@context.Share.Disabled" Icon="@Icons.Material.Filled.Share" OnClick="@context.Share.Action" >@AppLang.Share</MudMenuItem>
                            <MudMenuItem Disabled="@context.GetLink.Disabled" Icon="@Icons.Material.Filled.Link" OnClick="@context.GetLink.Action" >@AppLang.Get_link</MudMenuItem>
                            <MudMenuItem Disabled="@context.MoveTo.Disabled" Icon="@Icons.Material.Filled.DriveFileMove" OnClick="@context.MoveTo.Action" >@AppLang.Move_to</MudMenuItem>
                            <MudMenuItem Disabled="@context.GetInformation.Disabled" Icon="@Icons.Material.Filled.Info" OnClick="@context.GetInformation.Action" >@AppLang.Info</MudMenuItem>
                            <MudMenuItem Disabled="@context.Delete.Disabled" Icon="@Icons.Material.Filled.DeleteForever" IconColor="MudColor.Error" OnClick="@context.Delete.Action" >@AppLang.Delete</MudMenuItem>
                        </MudMenu>
                    </MudTooltip>
                </div>
            </div>
        }

    </ItemRenderer>
</MudDropContainer>

<MudPagination BoundaryCount="2" Class="pa-3" Count="@TotalPages" MiddleCount="0" Selected="@CurrentPage" SelectedChanged="@PageChanged" />

<MudDrawer Anchor="Anchor.End" @bind-Open="Open" Color="MudColor.Primary" Elevation="0" OverlayAutoClose Variant="@DrawerVariant.Temporary" Width="min(300px, 90vw)" >
    <MudDrawerHeader>
        <MudText Typo="Typo.h6" >@AppLang.File_upload</MudText>
    </MudDrawerHeader>
    <div class="container" >
        <div class="header" >
            <label disabled="@Uploading" for="file1" ></label>
            <MudText Typo="Typo.h1" >
                <i class="fa-cloud-arrow-up fa-solid" ></i>
            </MudText>
            <MudText Align="MudAlign.Center" >@AppLang.Browse_File_to_upload!</MudText>

            <form enctype="multipart/form-data" id="upload_form" method="post" >
                <AntiforgeryToken />
                <input class="d-none" disabled="@Uploading" id="file1" multiple name="file1" @onchange="FileInputChanged" type="file" >
            </form>

        </div>

        <div class="d-flex flex-row gap-3 justify-end mud-width-full" >
            <MudButton Class="rounded-pill" Color="MudColor.Error" Disabled="Uploading" OnClick="@ClearSelectedFile" Variant="Variant.Filled" >Clear</MudButton>
            <MudButton Class="rounded-pill" Color="MudColor.Success" Disabled="Uploading" OnClick="@SendForm" Variant="Variant.Filled" >Send</MudButton>
        </div>

        <div class="file-list-upload" >
            @foreach (var x in FileUploadList)
            {
                <div class="d-flex flex-row gap-2 mud-paper pa-3" @key="x.Id" >
                    <div class="align-center d-flex justify-center" >
                        <MudText>
                            <i class="@IconContentExtensions.GetIconContentType(x.ContentType)" ></i>
                        </MudText>
                    </div>
                    <div class="d-flex flex-1 flex-column gap-0 overflow-hidden" >
                        <span class="text-limit" >@x.FileName</span>
                        <MudProgressLinear Color="MudColor.Primary" Max="@x.FileSize" Size="MudSize.Small" Striped Value="@UploadProgress[x.Id]" />
                    </div>
                </div>
            }
        </div>
    </div>
</MudDrawer>