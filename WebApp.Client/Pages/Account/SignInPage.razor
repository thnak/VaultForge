@rendermode InteractiveWebAssembly
@attribute [Route(PageRoutes.Account.SignIn.Src)]
@attribute [Route(PageRoutes.Account.SignInError.Src + "/{ErrorMessage}")]
@layout SignInLayout

<PageTitle>@AppLang.Sign_in_to_your_account</PageTitle>

<HeadContent>
    <HeadContentContainer MetaProperty="@PageRoutes.Account.SignIn.MetaData"/>
</HeadContent>

<div class="sign-up-form mud-paper">
    <div class="align-center d-flex flex-column justify-center">
        <div>
            <img alt="" class="img-fluid" src="images/1.png" style="width: 250px;">
        </div>
        <p class="fs-2 text-white" style="font-family: 'Courier New', Courier, monospace; font-weight: 600;">Be Verified</p>
        <small class="text-center text-white text-wrap" style="width: 17rem;font-family: 'Courier New', Courier, monospace;">
            Join experienced Designers on this platform.
        </small>
    </div>

    <div class="main-form">
        <MudCarousel AutoCycle="false" @bind-SelectedIndex="CurrentIndex" Class="mud-width-full" EnableSwipeGesture="false" @ref="CarouselLogin" ShowArrows="false" ShowBullets="false" TData="object">
            <MudCarouselItem Color="MudColor.Default" Transition="Transition.Slide">
                <div class="d-flex mud-height-full mud-width-full">
                    <MudForm @bind-Errors="@FormError" @bind-IsValid="IsValid" Class="align-center justify-center mud-width-full" @ref="FormUser">
                        <div class="form gap-3">
                            <AntiforgeryToken/>
                            <MudText Align="MudAlign.Center" Color="MudColor.Primary" Typo="Typo.h5">@AppLang.Create_Account</MudText>
                            <MudTextField Adornment="Adornment.Start" AdornmentColor="MudColor.Primary" AdornmentIcon="fa-solid fa-user" @bind-Value="CurrentRequestModel.UserName"
                                          Class="mud-width-full"
                                          Error="@(!string.IsNullOrEmpty(UserErrorText))" ErrorText="@UserErrorText" For="() => CurrentRequestModel.UserName" InputType="InputType.Text"
                                          OnAdornmentClick="UsernameClickEvent" Placeholder="@AppLang.Username"
                                          Required T="string" UserAttributes="@(new Dictionary<string, object> { { "name", "Username" }, { "autocomplete", "current-username" } })" Variant="Variant.Outlined">
                            </MudTextField>

                            <MudButton Class="rounded-pill" Color="MudColor.Primary"
                                       Disabled="@Loading" FullWidth
                                       OnClick="UsernameProcess"
                                       Style="max-width: 400px" Variant="Variant.Filled">
                                @if (Loading)
                                {
                                    <MudProgressCircular Class="ms-n1" Indeterminate="true" Size="MudSize.Small"/>
                                    <MudText Class="ms-2">@AppLang.Processing</MudText>
                                }
                                else
                                {
                                    @AppLang.Sign_In
                                }
                            </MudButton>
                        </div>
                    </MudForm>
                </div>
            </MudCarouselItem>
            @* Password *@
            <MudCarouselItem Color="@MudColor.Default" Transition="Transition.Slide">
                <div class="d-flex mud-height-full mud-width-full">
                    <MudForm @bind-Errors="@FormError" @bind-IsValid="IsValid" Class="align-center justify-center mud-width-full" @ref="PasswordForm">
                        <div class="form gap-3">
                            <AntiforgeryToken/>
                            <MudText Align="MudAlign.Center" Color="MudColor.Primary" Typo="Typo.h5">@AppLang.Enter_password</MudText>

                            <MudTextField Adornment="Adornment.Start" AdornmentColor="MudColor.Primary" AdornmentIcon="@PasswordIcon" @bind-Value="CurrentRequestModel.Password"
                                          Class="mud-width-full"
                                          Error="@(!string.IsNullOrEmpty(PasswordErrorText))" ErrorText="@PasswordErrorText" For="() => CurrentRequestModel.Password"
                                          InputType="PasswordInput" OnAdornmentClick="PasswordShowEvent"
                                          Placeholder="@AppLang.Password" Required T="string" UserAttributes="@(new Dictionary<string, object> { { "name", "Password" }, { "autocomplete", "current-password" } })"
                                          Variant="Variant.Outlined">
                            </MudTextField>

                            <MudButton Class="rounded-pill" Color="MudColor.Primary"
                                       Disabled="@Loading" FullWidth
                                       OnClick="PasswordProcess"
                                       Style="max-width: 400px" Variant="Variant.Filled">
                                @if (Loading)
                                {
                                    <MudProgressCircular Class="ms-n1" Indeterminate="true" Size="MudSize.Small"/>
                                    <MudText Class="ms-2">@AppLang.Processing</MudText>
                                }
                                else
                                {
                                    @AppLang.Sign_In
                                }
                            </MudButton>
                        </div>
                    </MudForm>
                </div>
            </MudCarouselItem>
            @* Password *@


            <MudCarouselItem Color="@MudColor.Default" Transition="Transition.Fade">
                <div class="align-center d-flex flex-column justify-center mud-height-full mud-width-full">
                    <div class="mud-width-full">
                        <MudText Align="MudAlign.Center" Typo="Typo.h5">@AppLang.One_moment_please</MudText>
                        <MudProgressLinear Color="MudColor.Primary" Indeterminate="true" Size="MudSize.Small"/>
                        <div class="d-none">
                            <form action="/api/Account/login" id="loginForm" method="post">
                                <AntiforgeryToken/>
                                <div>
                                    <label for="UserName">@AppLang.Username:</label>
                                    <input id="UserName" name="username" required type="text" value="@CurrentRequestModel.UserName">
                                </div>
                                <div>
                                    <label for="Password">@AppLang.Password:</label>
                                    <input id="Password" name="password" required type="password" value="@CurrentRequestModel.Password">
                                </div>
                                <div>
                                    <label for="ReturnUrl">@AppLang.Password:</label>
                                    <input id="ReturnUrl" name="ReturnUrl" type="text" value="@CurrentRequestModel.ReturnUrl">
                                </div>
                                <button id="login-btn" type="submit">@AppLang.Login</button>
                            </form>
                        </div>
                    </div>
                </div>
            </MudCarouselItem>
        </MudCarousel>

    </div>
</div>

<script src="./Pages/Account/SignInPage.razor.js"></script>