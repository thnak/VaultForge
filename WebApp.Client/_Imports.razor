@using System.Net.Http
@using System.Net.Http.Json
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Components.Routing
@using Microsoft.AspNetCore.Components.Web
@using static Microsoft.AspNetCore.Components.Web.RenderMode
@using Microsoft.AspNetCore.Components.Web.Virtualization
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.Extensions.Localization
@using Microsoft.JSInterop
@using Microsoft.AspNetCore.Components.Sections

@using WebApp.Client
@using WebApp.Client.Layout
@using WebApp.Client.Utils
@using WebApp.Client.Components.DefaultStatic
@using WebApp.Client.Components.Container
@using WebApp.Client.Services.UserInterfaces
@using WebApp.Client.Services.Http;
@using WebApp.Client.NavMenu


@using System.Globalization
@using BusinessModels.Resources
@using MudBlazor
@using ApexCharts
@using MudVariant = MudBlazor.Variant

@using Blazored.Toast
@using Blazored.Toast.Services
@using BlazorWorker.BackgroundServiceFactory
@using BlazorWorker.WorkerBackgroundService
@using BlazorWorker.Core
@using Blazored.Toast.Configuration
@using BusinessModels.System.InternetOfThings
@using WebApp.Client.Authenticate


@using MudColor = MudBlazor.Color
@using ApexColor = ApexCharts.Color
@using MudSize = MudBlazor.Size
@using ApexSize = ApexCharts.Size
@using MudAlign = MudBlazor.Align
@using ApexAlign = ApexCharts.Align

@inject StateContainer CustomStateContainer
@inject DocumentObjectModelEventListener EventListener
@inject IIndexedDbService<IoTDevice> IotDeviceIndexedDbService
@inject BaseHttpClientService ApiService
@inject IJSRuntime JsRuntime
@inject IStringLocalizer<AppLang> LangDict
@inject ProtectedLocalStorage ProtectedLocalStorageService
@inject ProtectedLocalStorage ProtectedSessionStorageService
@inject NavigationManager Navigation 
@inject ISnackbar SnackbarService
@inject IToastService ToastService
@inject IDialogService DialogService
@inject IBrowserViewportService BrowserViewportService

@inject IWorkerFactory WorkerFactory
@inject AuthenticationStateProvider PersistentAuthenticationStateService